name: Laravel CI
on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      php-version: ${{ steps.php-version.outputs.php-version }}
      cache-key: ${{ steps.cache-key.outputs.value }}

    steps:
      - uses: actions/checkout@v4
      - name: Get PHP version
        id: php-version
        run: |
          echo "php-version=`jq -r '.config.platform.php' composer.json`" >> $GITHUB_OUTPUT
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ steps.php-version.outputs.php-version }}
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Generate vendor cache key
        id: cache-key
        run: echo "value=${{ runner.os }}-vendor-${{ hashFiles('**/composer.lock') }}" >> $GITHUB_OUTPUT
      - name: Restore Composer Cache
        uses: actions/cache/restore@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Save Composer Cache
        uses: actions/cache/save@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
      - name: Cache Vendor
        uses: actions/cache/save@v4
        with:
          path: vendor
          key: ${{ steps.cache-key.outputs.value }}

  test-coverage:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ needs.setup.outputs.php-version }}
          ini-values: pcov.directory=src
          coverage: 'pcov'
      - name: Restore Vendor
        uses: actions/cache/restore@v4
        with:
          path: vendor
          key: ${{ needs.setup.outputs.cache-key }}
      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Generate OpenAPI Spec
        run: php -d memory_limit=-1 artisan l5-swagger:generate
      - name: Execute tests with coverage
        run: php artisan test --coverage
      - name: Upload coverage to octocov
        uses: k1LoW/octocov-action@v0

  lint:
    needs: setup
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ needs.setup.outputs.php-version }}
      - name: Restore Vendor
        uses: actions/cache/restore@v4
        with:
          path: vendor
          key: ${{ needs.setup.outputs.cache-key }}
      - name: Run PHPStan
        run: vendor/bin/phpstan analyse
      - name: Run PHP-CS-Fixer
        run: vendor/bin/php-cs-fixer fix --dry-run --diff --format=checkstyle | cs2pr
      - name: Generate OpenAPI Spec
        run: php -d memory_limit=-1 artisan l5-swagger:generate
      - name: Check OpenAPI Spec
        run: npx --yes @stoplight/spectral-cli lint storage/api-docs/api-docs.json
